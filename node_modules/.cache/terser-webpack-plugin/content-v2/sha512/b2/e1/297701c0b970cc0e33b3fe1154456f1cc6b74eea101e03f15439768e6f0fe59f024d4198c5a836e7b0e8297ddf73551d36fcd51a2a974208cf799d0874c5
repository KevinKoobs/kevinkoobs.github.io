{"code":"!function(e){var t={};function s(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)s.d(r,i,function(t){return e[t]}.bind(null,i));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,\"a\",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p=\"\",s(s.s=0)}([function(e,t){new Vue({el:\"#boodschappen\",data:{search:\"\",items:[],groups:[],add:\"\",data:[],test:\"bla\"},computed:{sortedItems:function(){return self=this,items=this.getItems(),self.items=this.sortItems(),self.items}},created:function(){return this.groupItems(this.sortedItems)},watch:{search:function(){this.filterItems()}},methods:{sortItems(e=this.items){return list=e,list.sort((e,t)=>e.title>t.title?1:-1),list},getItems(){_data=\"\",self=this,$.ajax({url:\"https://kevin.nodum.io/json/items\",success:function(e){self.items=e},async:!1})},filterItems(){self=this,items=this.items,newItems=[],items.forEach((function(e){self.itemInItemlist(e.title)&&newItems.push({title:e.title})})),newItems=self.sortItems(newItems),self.groupItems(newItems)},itemInItemlist:e=>-1!==e.toLowerCase().indexOf(self.search.toLowerCase()),groupItems(e){return self=this,self.groups=[],groups=[],e.forEach((function(e){$firstLetterOfItem=e.title.slice(0,1),$indexOfLetterInGroups=groups.map((function(e){return e.letter})).indexOf($firstLetterOfItem),$indexOfLetterInGroups>-1?(values=groups[$indexOfLetterInGroups].values,values.push(e.title)):(groups.push({letter:$firstLetterOfItem,values:[]}),$indexOfLetterInGroups=groups.map((function(e){return e.letter})).indexOf($firstLetterOfItem),values=[e.title]),groups[$indexOfLetterInGroups].values=values})),this.groups=groups,this.groups},addItemToList(){self=this,item=self.add,self.items.push({title:item}),self.sortItems(self.items),self.groupItems(self.items),$.post(\"json/additem\",{item:self.add},(function(e){})),self.add=\"\"}}})}]);","extractedComments":[]}